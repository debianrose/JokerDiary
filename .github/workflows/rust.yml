name: Build Releases

on:
  workflow_dispatch:  # Только ручной запуск

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: cargo
          targets: x86_64-unknown-linux-gnu
          cache: true

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Build Linux release
        run: cd src-tauri && cargo install tauri-cli && cargo tauri build --target x86_64-unknown-linux-gnu --verbose

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jokerdiary-linux
          path: |
            src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/
          retention-days: 30

  build-windows:
    name: Build Windows (GNU)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: cargo
          targets: x86_64-pc-windows-gnu
          cache: true

      - name: Install Windows dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Build Windows release
        run: cd src-tauri && cargo install tauri-cli && cargo tauri build --target x86_64-pc-windows-gnu --verbose

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jokerdiary-windows
          path: |
            src-tauri/target/x86_64-pc-windows-gnu/release/bundle/
          retention-days: 30

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: cargo
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android dependencies
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;34.0.0"
          sdkmanager "ndk;27.1.12297006"

      - name: Setup Android environment
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "NDK_HOME=$ANDROID_HOME/ndk/27.1.12297006" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      - name: Initialize Tauri Android
        run: cd src-tauri && cargo install tauri-cli && cargo tauri android init

      - name: Setup signing (if configured)
        run: |
          if [ -f "${{ secrets.ANDROID_KEYSTORE_FILE }}" ]; then
            mkdir -p ~/.android/keys
            cp "${{ secrets.ANDROID_KEYSTORE_FILE }}" ~/.android/keys/jokerdiary-key.jks
          fi

      - name: Build Android release
        env:
          TAURI_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          TAURI_ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: cargo tauri android build --release

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jokerdiary-android
          path: |
            src-tauri/gen/android/jokerdiary/app/build/outputs/apk/release/
          retention-days: 30

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-android]
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: List artifacts
        run: find artifacts/ -type f -name "*.deb" -o -name "*.AppImage" -o -name "*.msi" -o -name "*.exe" -o -name "*.apk" | sort

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: build-${{ github.run_id }}
          name: "Build ${{ github.run_id }}"
          body: |
            Automated build created on ${{ github.event.head_commit.timestamp }}
            
            Contains:
            - Linux: .deb, .AppImage
            - Windows: .msi, .exe
            - Android: .apk
          draft: false
          prerelease: false
          files: |
            artifacts/jokerdiary-linux/**/*.deb
            artifacts/jokerdiary-linux/**/*.AppImage
            artifacts/jokerdiary-windows/**/*.msi
            artifacts/jokerdiary-windows/**/*.exe
            artifacts/jokerdiary-android/**/*.apk
